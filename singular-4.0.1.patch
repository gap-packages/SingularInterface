--- src/factory/NTLconvert.cc	2018-05-14 15:38:21.000000000 +0200
+++ src/factory/NTLconvert.cc	2018-05-14 15:38:14.000000000 +0200
@@ -30,6 +30,7 @@
 #include <NTL/GF2EXFactoring.h>
 #include <NTL/tools.h>
 #include <NTL/mat_ZZ.h>
+#include <NTL/version.h>
 #include "int_int.h"
 #include <limits.h>
 #include "NTLconvert.h"
@@ -501,7 +502,15 @@
   }
   else
   {
-    long sizeofrep= ((long *) a.rep) [1];
+    const long * rep =
+#if NTL_MAJOR_VERSION <= 6
+      static_cast<long *>( a.rep );
+#elif NTL_MAJOR_VERSION <=9
+      static_cast<long *>( a.rep.rep ); // what about NTL7?
+#else
+      (long*)( a.rep.rep );
+#endif
+    long sizeofrep= rep[1];
     bool lessZero= false;
     if (sizeofrep < 0)
     {
@@ -519,7 +528,7 @@
       cf_stringtemp_l= sizeofrep*sizeof(mp_limb_t)*2;
       cf_stringtemp= (unsigned char*) Alloc (cf_stringtemp_l);
     }
-    int cc= mpn_get_str (cf_stringtemp, 16, (mp_limb_t *) (((long *) (a.rep)) + 2), sizeofrep);
+    int cc= mpn_get_str (cf_stringtemp, 16, (mp_limb_t *) ((rep) + 2), sizeofrep);
 
     char* cf_stringtemp2;
     if (lessZero)
