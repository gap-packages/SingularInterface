Fix path in lib/libsing.gi, because it contains the Singular version!
proxy implementation for intmats and intvecs?
More constructors (or less, if accessible via high level)
Quick polynomial constructor
More view and print routines
proxies for Singular interpreter variables
generic copying for singular objects (and proxy objects)
access to def and proc ?
Help-function to see available Singular-Funktions
Method installations for conveniences like +, -, * etc.
Better ring constructor
Try to run manual examples
Tuning using low level interface
get rid of SING_GETPOLY
check automatic type changes
explicit type casts?
Write access to Singular interpreter variables
Documentation
Debugging
Explosion of objects like lists (rewrap pieces)
Assembling of objects losing the wrapping of the pieces



More TODO:

proxy objects to look into matrices
why does SI_print do nothing (or does it do anything?)



const char *p_Read(const char *st, poly &rc, const ring r)
returns how far it has parsed
if equal to input, then nothing read --> error

poly a;
poly b;

a = p_Add(a,b);
danach ist b undefiniert, nullen


Vektor machen:




Noch benoetigt:

- Zugriff auf Matrixeintraege, lesen und schreiben
- Verhindere Abstuerze bei falschen Aufrufen
- SI_det produziert 0 fuer [[a,b],[ab,-1]]
- unsere Polynome sind "IsRingElement"
- String methode
- Fix Makematrix_from_String if not enough polys are given
- hole ring von Singular object

Fragen:

- Warum stuerzt das ab:

gap> s := SingularRing(3,["a","b"],[["dp",2]]);
<singular ring>
gap> m := SI_Makematrix_from_String(2,2,s,"a,b,ab,2");
<singular object: a, b,
ab,-1>
gap> Display(m);
a, b,
ab,-1
gap> x := SI_\[(m,1);


Naming convention questions:

How about:

Get rid of _SI_Intbigint and use SI_ToGAP
Get rid of _SI_Plistintvec and use SI_ToGAP
Get rid of _SI_Matintmat and use SI_ToGAP


Implementiere FreeFuncs fuer viele Singular-Typen

Unify SingObj::cleanup and _SI_FreeFunc as far as possible

