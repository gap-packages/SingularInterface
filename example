LoadPackage("libsingular");
s := SingularRingWithoutOrdering(32003,["x","y","z"]);
s1 := SI_MONOMIAL(s,1,[2,1,0]);
s1 := SI_ADD_POLYS(s1,SI_MONOMIAL(s,151,[1,1,10]));
s1 := SI_ADD_POLYS(s1,SI_MONOMIAL(s,169,[0,21,0]));
s2 := SI_MONOMIAL(s,1,[1,0,14]);
s2 := SI_ADD_POLYS(s2,SI_MONOMIAL(s,6,[2,4,0]));
s2 := SI_ADD_POLYS(s2,SI_MONOMIAL(s,3,[0,0,24]));
s3 := SI_MONOMIAL(s,5,[1,10,10]);
s3 := SI_ADD_POLYS(s3,SI_MONOMIAL(s,2,[0,20,10]));
s3 := SI_ADD_POLYS(s3,SI_MONOMIAL(s,1,[0,10,20]));
s3 := SI_ADD_POLYS(s3,SI_MONOMIAL(s,11,[3,0,0]));
i := SI_ideal([s1,s2,s3]);
j := SI_CallFunc1(331,i);   # std
n := SI_MONOMIAL(s,0,[0,0,0]);
ps := List([1..40],k->SI_ADD_POLYS(n,SI_proxy(j,k)));
pss := List(ps,SI_STRING_POLY);
ps2 := List([1..40],k->SI_proxy(j,k));
pss2 := List(ps2,SI_STRING_POLY);
pss=pss2;

