#!/bin/sh -e
#
# SingularInterface: A GAP interface to Singular
#
# Copyright (C) 2011-2014  Mohamed Barakat, Max Horn, Frank Lübeck,
#                          Oleksandr Motsak, Max Neunhöffer, Hans Schönemann
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#


VERSION=4.0.0
PATCHLEVEL=.p4
TARFILE=singular-$VERSION$PATCHLEVEL.tar.gz
URL=http://www.mathematik.uni-kl.de/ftp/pub/Math/Singular/SOURCES/4-0-0/$TARFILE
MD5=1e0cc7711479e558d473226b24dea4e5

mkdir -p singular

# Download
if [ -e $TARFILE ] ; then
    echo "Checking for $TARFILE... found existing file, using that"
    # TODO: add a checksum check?
elif command -v wget >/dev/null 2>&1 ; then
    echo "Checking for $TARFILE... downloading with wget"
    wget $URL
elif command -v curl >/dev/null 2>&1 ; then
    echo "Checking for $TARFILE... downloading with curl"
    curl -O $URL
else
    echo "Checking for $TARFILE... not found and unable to download"
    echo
    echo "Please manually download the following file:"
    echo "  $URL"
    echo "Put it into the SingularInterface directory and re-run this script."
    exit 1
fi

# Verify checksum
echo "Verifying MD5 checksum of $TARFILE..."
if command -v md5 >/dev/null 2>&1 ; then
    COMPUTED_MD5=`md5 $TARFILE`
elif command -v md5sum >/dev/null 2>&1 ; then
    COMPUTED_MD5=`md5sum $TARFILE`
elif command -v openssl >/dev/null 2>&1 ; then
    COMPUTED_MD5=`openssl md5 $TARFILE`
else
    COMPUTED_MD5=skip
fi
case $COMPUTED_MD5 in
   skip) echo "   could not compute MD5 checksum, skipping test" ;;
   *$MD5* ) echo "   valid MD5 checksum" ;;
   *)  echo "  invalid MD5 checksum, aborting"
       exit 1
       ;;
esac

# Extract
tar xvf $TARFILE

# Move output to right place
rm -rf singular/src
mv singular-$VERSION singular/src
